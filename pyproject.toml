[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "aura-ia"
version = "0.1.0"
description = "The brain of Aura's automation for intelligent financial AI responses"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "Daniel Tavares", email = "daniel@aura-project.com"}
]
keywords = [
    "ai",
    "artificial-intelligence",
    "financial-ai",
    "nlp",
    "chatbot",
    "alexa",
    "voice-assistant",
    "gemini",
    "gpt",
    "openai"
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
requires-python = ">=3.8"
dependencies = [
    "google-generativeai>=0.3.0",
    "openai>=1.0.0",
    "aiohttp>=3.9.0",
    "python-dotenv>=1.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
]

[project.urls]
Homepage = "https://github.com/DannyahIA/aura-intelligent-answers-module"
Repository = "https://github.com/DannyahIA/aura-intelligent-answers-module"
Issues = "https://github.com/DannyahIA/aura-intelligent-answers-module/issues"

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
asyncio_mode = "auto"

[tool.coverage.run]
source = ["src"]
omit = ["*/tests/*", "*/test_*.py"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
]
